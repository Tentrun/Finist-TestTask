// <auto-generated />
using System;
using Finist_TestTask.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Finist_TestTask.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Finist_TestTask.Domain.Models.Account.Implementation.CardAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("CardAccounts", "public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17a390db-bcbb-40e1-a4d8-fca984296efd"),
                            AccountNumber = "42305840513000000112",
                            UserId = new Guid("9e8aab80-4ab5-4177-99e8-0bdeed2885cd")
                        },
                        new
                        {
                            Id = new Guid("762728d8-fbe2-4374-9968-8131aa57b8f2"),
                            AccountNumber = "93567840589112300112",
                            UserId = new Guid("46a7b9cd-1de8-4777-aa4e-edff233d3550")
                        });
                });

            modelBuilder.Entity("Finist_TestTask.Domain.Models.Account.Implementation.DemandAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("DemandAccounts", "public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f64cad21-cb98-4d23-bd43-ee483ac6ee9f"),
                            AccountNumber = "71642567061085536844",
                            UserId = new Guid("9e8aab80-4ab5-4177-99e8-0bdeed2885cd")
                        },
                        new
                        {
                            Id = new Guid("05f3c60f-f9fa-401e-ad0f-b2202a538371"),
                            AccountNumber = "69756952598567995321",
                            UserId = new Guid("46a7b9cd-1de8-4777-aa4e-edff233d3550")
                        });
                });

            modelBuilder.Entity("Finist_TestTask.Domain.Models.Account.Implementation.ExpressAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("ExpressAccounts", "public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20229757-84fd-4c55-946e-c5c65ab7d093"),
                            AccountNumber = "70152631400678905460",
                            UserId = new Guid("9e8aab80-4ab5-4177-99e8-0bdeed2885cd")
                        },
                        new
                        {
                            Id = new Guid("3e13e435-573a-4513-96d8-0cb5e7f43750"),
                            AccountNumber = "00365680679007776789",
                            UserId = new Guid("46a7b9cd-1de8-4777-aa4e-edff233d3550")
                        });
                });

            modelBuilder.Entity("Finist_TestTask.Domain.Models.Client.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CardAccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("CardAccountId");

                    b.Property<Guid>("DemandAccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("DemandAccountId");

                    b.Property<Guid>("ExpressAccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("ExpressAccountId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Patronymic");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SecondName");

                    b.HasKey("Id");

                    b.ToTable("Clients", "public");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e8aab80-4ab5-4177-99e8-0bdeed2885cd"),
                            CardAccountId = new Guid("17a390db-bcbb-40e1-a4d8-fca984296efd"),
                            DemandAccountId = new Guid("f64cad21-cb98-4d23-bd43-ee483ac6ee9f"),
                            ExpressAccountId = new Guid("20229757-84fd-4c55-946e-c5c65ab7d093"),
                            Name = "Тест2",
                            Patronymic = "Тестович2",
                            PhoneNumber = "+79980007633",
                            SecondName = "Тестов2"
                        },
                        new
                        {
                            Id = new Guid("46a7b9cd-1de8-4777-aa4e-edff233d3550"),
                            CardAccountId = new Guid("762728d8-fbe2-4374-9968-8131aa57b8f2"),
                            DemandAccountId = new Guid("05f3c60f-f9fa-401e-ad0f-b2202a538371"),
                            ExpressAccountId = new Guid("3e13e435-573a-4513-96d8-0cb5e7f43750"),
                            Name = "Тест",
                            Patronymic = "Тестович",
                            PhoneNumber = "+79992223344",
                            SecondName = "Тестов"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
